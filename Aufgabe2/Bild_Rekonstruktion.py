from Verzinkt import simulation

############################################### Daten zur Nachbildung des Beispielbildes
img_size = (220, 165)

start_pos = [(7,9), (42,14), (112,5), (92,13), (110, 60), (40, 60), (110, 20), (135, 4), (131, 12), (156, 6), (205, 11), (195, 20),
(214, 17), (144, 18), (176, 19), (187, 20), (195, 50), (214, 61), (0, 23), (46, 30), (44, 36), (37, 41), (219, 104), (45, 87), (190, 120),
(179, 138), (208, 142), (193, 155), (219, 164), (0, 164), (78, 133), (164, 142), (96, 164), (129, 152), (95, 134), (55, 142), (77, 126),
(96, 115), (98, 97), (117, 116), (127, 124), (138, 105), (59, 102), (48, 108), (70, 106), (80, 107), (113, 140), (151, 103), (194, 33),
(153, 87), (174, 107), (140, 99)]

grayscales = [223, 158, 230, 230, 133, 140, 132, 150, 150, 196, 145, 214, 200, 138, 137, 113, 125, 185, 151, 229, 135, 224, 119, 239, 203,
120, 225, 225, 135, 123, 214, 145, 147, 112, 125, 140, 135, 223, 133, 224, 110, 107, 228, 135, 148, 203, 120, 225, 228, 158, 163, 133]

delays = [25, 0, 10, 15, 0, 0, 0, 20, 20, 20, 3, 0, 13, 17, 10, 13, 6, 20, 33, 15, 15, 17, 15, 20, 33, 20, 40, 40, 0, 0, 40, 10, 
15, 40, 45, 30, 40, 40, 35, 25, 30, 45, 35, 35, 35, 30, 30, 20, 40, 15, 15, 25]

speed_data = [(.157, .1, .186, .171), (.4, .643, .529, .714), (.257, .2, .186, .286), (.314, .143, .4, .4), (.471, 1.0, .543, .957),
(.514, .929, .543, 1.0), (.271, .443, .543, .414), (.129, .129, .143, .129), (.129, .1, .143, .114), (.314, .257, .171, .186),
(.386, .429, .386, .314), (.1, .04, .15, .03), (.029, .071, .0, .029), (.157, .271, .329, .229), (.286, .257, .414, .4),
(.086, .171, .2, .2), (.414, .443, .7, .514), (.214, .157, .257, .129), (.129, .129, .0, .0), (.014, .143, .186, .014), (.2, .2, .2, .157),
(.129, .014, .014, .079), (.486, .0, .443, .486), (.257, .271, .0, .0), (.286, .171, .171, .286), (.443, .357, .4, .4), (.014, .014, .286, .257),
(.144, .2, .214, .229), (.6, .0, .0, .6), (1.0, 1.0, .0, .0), (.0, .157, .186, .157), (.429, .0, .429, .529), (.286, .386, .0, .471),
(.286, .157, .286, .1), (.157, .143, .157, .171), (.329, .329, .3, .329), (.086, .186, .086, .214), (.171, .2, .2, .131), (.0, .257, .2, .257),
(.257, .3, .186, .257), (.157, .214, .3, .114), (.143, .0, .329, .143), (.014, .153, .014, .014), (.314, .257, .257, .286), (.257, .157, .286, .014),
(.2, .1, .1, .1), (.07, .1, .05, .15), (.13, .15, .15, .25), (.15, .1, .1, .05), (.1, .25, .15, .15), (.1, .15, .2, .5), (.15, .05, .15, .05)]
###################################################

for i in (start_pos, grayscales, speed_data, delays):
    print(len(i))

start_pos = tuple(pos[::-1] for pos in start_pos) # Formatiere Startpositionen

aehnlich_sim = simulation(img_size, start_pos, grayscales, speed_data, delays, name = "Rekonstruiertes Bild\\Ähnlich wie das Bild") # Initialisiere Simulation

aehnlich_sim.run_simulation() # Führe Simulation durch und exportiere das fertige Bild
aehnlich_sim.export_image()

while True: pass